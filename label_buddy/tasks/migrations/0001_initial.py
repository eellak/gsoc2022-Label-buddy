# Generated by Django 3.2.3 on 2022-07-31 19:15

from django.db import migrations, models
import enumchoicefield.fields
import jsonfield.fields
import tasks.models
import url_or_relative_url_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='Date and time of annotation creation')),
                ('updated_at', models.DateTimeField(blank=True, help_text='Date and time of update', null=True)),
                ('result', jsonfield.fields.JSONField(blank=True, help_text='The result of the annotation in JSON format', null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='Date and time of a review', null=True)),
                ('rejected_by_user', models.BooleanField(default=False, help_text='Annotation rejected by user true/false')),
                ('hidden_by_user', models.BooleanField(default=False, help_text='Hidden by users true/false')),
                ('review_status', enumchoicefield.fields.EnumChoiceField(default=tasks.models.Annotation_status(3), enum_class=tasks.models.Annotation_status, help_text='Status for annotation review', max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(help_text='Comment for an annotation')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='Date and time of comment creation')),
                ('updated_at', models.DateTimeField(blank=True, help_text='Date and time of update', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, help_text='Local file uploaded', null=True, upload_to='audio')),
                ('original_file_name', models.CharField(blank=True, default='', help_text='Task file original file name', max_length=256, null=True)),
                ('url', url_or_relative_url_field.fields.URLOrRelativeURLField(blank=True, help_text='URL for a file')),
                ('audiowaveform', jsonfield.fields.JSONField(blank=True, default=None, help_text='Audiowaveform data to use for the wavesurver', null=True)),
                ('annotation_prediction', jsonfield.fields.JSONField(blank=True, default=None, help_text='Annotation prediction for the deep learning model', null=True)),
                ('status', enumchoicefield.fields.EnumChoiceField(default=tasks.models.Status(2), enum_class=tasks.models.Status, help_text='If the task is annotated status must be labeled else unlabeled', max_length=9)),
                ('review_status', enumchoicefield.fields.EnumChoiceField(default=tasks.models.Review_status(1), enum_class=tasks.models.Review_status, help_text='Status for reviews', max_length=10)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
    ]
